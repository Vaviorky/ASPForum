@using ASPForum.Resources
@model ASPForum.Models.Message

@{
    ViewBag.Title = GlobalRes.NewMessage;
}

<script type="text/javascript">
    tinyMCE.remove();
    tinyMCE.init({
        setup: function (ed) {
            ed.on('change',
                function (e) {
                    $('#error').empty();
                    $("input[type=submit]").attr("disabled", false);
                    spellchecktinymce();
                });
        },
        table_toolbar: "",
        mode: "exact",
        elements: "txtid",
        theme: 'modern',
        plugins: [
            'advlist autolink lists link image charmap print preview hr anchor pagebreak wordcount',
            'searchreplace wordcount visualblocks visualchars code fullscreen',
            'insertdatetime media nonbreaking save table contextmenu directionality',
            'emoticons template paste textcolor colorpicker textpattern imagetools codesample toc'
        ],
        toolbar1: 
            'undo redo | insert | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image',
        toolbar2: 'print preview media | forecolor backcolor emoticons | codesample',
        image_advtab: true,
        theme_advanced_resizing: true,
        height: "250"
    });
</script>
<script type="text/javascript">
    function spellchecktinymce() {
        $.get('/Content/forbiddenwords.txt',
            function(result) {
                var splitfile = result.split(/\r\n/);
                if (tinymce.editors.length > 0) {
                    var content = tinyMCE.activeEditor.getContent({ format: 'raw' });
                    for (var i = 0; i < splitfile.length - 1; i++) {
                        if (content.search(splitfile[i]) !== -1) {
                            $("#error").append('<p>@GlobalRes.InappropriateWord: ' +
                                splitfile[i] +
                                '</p>');
                            $("input[type=submit]").attr("disabled", true);
                        }
                    }
                }
            });
    }
</script>

@using (Ajax.BeginForm("Create", "Messages", new AjaxOptions
{
    HttpMethod = "POST",
    UpdateTargetId = "moj_div",
    InsertionMode = InsertionMode.Replace
}))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>@GlobalRes.NewMessage</h4>
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})


        @Html.Action("NewMessageFriends")


        <div class="form-group">
            <span class="control-label col-md-2">@GlobalRes.Title: </span>

            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Title, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <span class="control-label col-md-2">@GlobalRes.Text: </span>

            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Text, new { @id = "txtid", @onload = "textareload();" })
                @Html.ValidationMessageFor(model => model.Text, "", new {@class = "text-danger"})
            </div>
        </div>
        <h4 id="error" style="color: red"></h4>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@GlobalRes.Submit" class="btn btn-default"/>
            </div>
        </div>
    </div>
}

<div>
    @Ajax.ActionLink(GlobalRes.BackToList, "Inbox", "Manage", null, new AjaxOptions {UpdateTargetId = "moj_div", InsertionMode = InsertionMode.Replace, HttpMethod = "GET"}, new {@class = "btn btn-primary btn-md"})
</div>